<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.5</version>
		<relativePath/>
	</parent>

	<groupId>org.springframework.samples.petclinic.client</groupId>
	<artifactId>spring-petclinic-customers-service</artifactId>
	<packaging>jar</packaging>
	<description>Spring PetClinic Customers Service</description>


	<properties>
		<java.version>17</java.version>
		<assertj.version>3.26.3</assertj.version>

		<spring-boot.version>3.3.5</spring-boot.version>
		<spring-cloud.version>2023.0.3</spring-cloud.version>
        <spring-cloud-services.version>4.1.5</spring-cloud-services.version>
		<spring-cloud-starter-sleuth.version>3.1.11</spring-cloud-starter-sleuth.version>

        <maven-surefire-plugin.version>3.5.1</maven-surefire-plugin.version>
        <spring-boot.build-image.imageName>${REPOSITORY_PREFIX}/spring-petclinic-cloud-customers-service</spring-boot.build-image.imageName>
    
		<jolokia-core.version>1.7.2</jolokia-core.version>
		<mysql-connector-java.version>8.0.33</mysql-connector-java.version>
		<javax.persistence-api.version>2.2</javax.persistence-api.version>
		<validation-api.version>2.0.1.Final</validation-api.version>

		<spring-security-ldap.version>6.3.4</spring-security-ldap.version>
		<spring-boot-starter-data-ldap.version>3.3.5</spring-boot-starter-data-ldap.version>
	</properties>

	<dependencies>

		<!-- Spring Boot -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>
		
		<!-- Spring Security -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-ldap</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-ldap</artifactId>
		</dependency>

		<!-- Spring Cloud -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bootstrap</artifactId>
        </dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-sleuth</artifactId>
		</dependency>

		<!-- Third parties -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>javax.persistence-api</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.jolokia</groupId>
			<artifactId>jolokia-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<dependency>
			<groupId>io.zipkin.brave</groupId>
			<artifactId>brave-instrumentation-mysql8</artifactId>
		</dependency>

		<!-- Testing -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>io.pivotal.spring.cloud</groupId>
				<artifactId>spring-cloud-services-dependencies</artifactId>
				<version>${spring-cloud-services.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-sleuth</artifactId>
				<version>${spring-cloud-starter-sleuth.version}</version>				
			</dependency>
			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-core</artifactId>
				<version>${assertj.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.jolokia</groupId>
				<artifactId>jolokia-core</artifactId>
				<version>${jolokia-core.version}</version>
			</dependency>
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql-connector-java.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>javax.persistence</groupId>
				<artifactId>javax.persistence-api</artifactId>
				<version>${javax.persistence-api.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.validation</groupId>
				<artifactId>validation-api</artifactId>
				<version>${validation-api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-ldap</artifactId>
				<version>${spring-security-ldap.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-ldap</artifactId>
				<version>${spring-boot-starter-data-ldap.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<profiles>

		<profile>
			<id>local</id>
			<dependencies>
				<dependency>
					<groupId>org.springframework.cloud</groupId>
					<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
					<exclusions>
						<exclusion>
							<groupId>org.springframework.cloud</groupId>
							<artifactId>spring-cloud-starter-netflix-ribbon</artifactId>
						</exclusion>
						<exclusion>
							<groupId>org.springframework.cloud</groupId>
							<artifactId>spring-cloud-netflix-ribbon</artifactId>
						</exclusion>
						<exclusion>
							<groupId>com.netflix.ribbon</groupId>
							<artifactId>ribbon-eureka</artifactId>
						</exclusion>
						<exclusion>
							<groupId>org.springframework.cloud</groupId>
							<artifactId>spring-cloud-netflix-hystrix</artifactId>
						</exclusion>
					</exclusions>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>cloud</id>
			<dependencies>
				<!-- Spring Cloud Services -->
				<dependency>
					<groupId>io.pivotal.spring.cloud</groupId>
					<artifactId>spring-cloud-services-starter-config-client</artifactId>
				</dependency>
				<dependency>
					<groupId>io.pivotal.spring.cloud</groupId>
					<artifactId>spring-cloud-services-starter-service-registry</artifactId>
				</dependency>
				<dependency>
					<groupId>org.springframework.cloud</groupId>
					<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
					<exclusions>
						<exclusion>
							<groupId>org.springframework.cloud</groupId>
							<artifactId>spring-cloud-starter-netflix-ribbon</artifactId>
						</exclusion>
						<exclusion>
							<groupId>org.springframework.cloud</groupId>
							<artifactId>spring-cloud-netflix-ribbon</artifactId>
						</exclusion>
						<exclusion>
							<groupId>com.netflix.ribbon</groupId>
							<artifactId>ribbon-eureka</artifactId>
						</exclusion>
						<exclusion>
							<groupId>org.springframework.cloud</groupId>
							<artifactId>spring-cloud-netflix-hystrix</artifactId>
						</exclusion>
					</exclusions>
				</dependency>
			</dependencies>
		</profile>


		<profile>
			<id>k8s</id>
	        <activation>
	            <activeByDefault>true</activeByDefault>
	        </activation>
			<dependencies>
				<dependency>
					<groupId>org.springframework.cloud</groupId>
					<artifactId>spring-cloud-starter-kubernetes-client-config</artifactId>
				</dependency>
			</dependencies>
		</profile>
	</profiles>

	<build>
		<finalName>customers-service</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
			      <layers>
			        <enabled>true</enabled>
			      </layers>
				</configuration>
				<executions>
					<execution>
						<!-- Spring Boot Actuator displays build-related information if a
							META-INF/build-info.properties file is present -->
						<goals>
							<goal>build-info</goal>
						</goals>
						<configuration>
							<additionalProperties>
								<encoding.source>${project.build.sourceEncoding}</encoding.source>
								<encoding.reporting>${project.reporting.outputEncoding}</encoding.reporting>
								<java.source>${java.version}</java.source>
								<java.target>${java.version}</java.target>
							</additionalProperties>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
